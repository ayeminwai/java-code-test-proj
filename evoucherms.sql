-- MySQL Script generated by MySQL Workbench
-- Mon Sep 20 20:38:49 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema evoucherms
-- -----------------------------------------------------
-- 
-- 
DROP SCHEMA IF EXISTS `evoucherms` ;

-- -----------------------------------------------------
-- Schema evoucherms
--
-- 
-- 
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `evoucherms` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
SHOW WARNINGS;
USE `evoucherms` ;

-- -----------------------------------------------------
-- Table `buy_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `buy_type` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `buy_type` (
  `bt_id` INT NOT NULL,
  `bt_desc` VARCHAR(45) NULL,
  PRIMARY KEY (`bt_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cards`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cards` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cards` (
  `cards_id` BIGINT(16) NOT NULL,
  `payment_method_id` INT NOT NULL,
  `status` VARCHAR(1) NULL DEFAULT 'A',
  PRIMARY KEY (`cards_id`),
  CONSTRAINT `cards_payment_method_fk`
    FOREIGN KEY (`payment_method_id`)
    REFERENCES `payment_method` (`pm_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `cards_payment_method_fk_idx` ON `cards` (`payment_method_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `evoucher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `evoucher` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `evoucher` (
  `evoucher_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `expire_date` DATE NULL,
  `image` VARCHAR(45) NULL,
  `amount` DECIMAL(8,2) NULL,
  `payment_method_id` INT NOT NULL,
  `payment_discount_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `buy_type_id` INT NOT NULL,
  `evoucher_status` VARCHAR(1) NULL DEFAULT 'A' COMMENT 'A is Active\nI is Inactive\nC is Checkout',
  `created_date` DATE NULL,
  `updated_date` DATE NULL,
  PRIMARY KEY (`evoucher_id`),
  CONSTRAINT `evoucher_paymentmethod_fk`
    FOREIGN KEY (`payment_method_id`)
    REFERENCES `payment_method` (`pm_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `evoucher_paymentmethoddiscount_fk`
    FOREIGN KEY (`payment_discount_id`)
    REFERENCES `payment_method_discount` (`pmd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `evoucher_buytype_fk`
    FOREIGN KEY (`buy_type_id`)
    REFERENCES `buy_type` (`bt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `evoucher_pm_fk_idx` ON `evoucher` (`payment_method_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `evoucherid_pmdid_fk_idx` ON `evoucher` (`payment_discount_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `evoucher_buytype_fk_idx` ON `evoucher` (`buy_type_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `evoucher_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `evoucher_details` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `evoucher_details` (
  `evoucher_details_id` INT NOT NULL AUTO_INCREMENT,
  `evoucher_id` INT NOT NULL,
  `bt_id` INT NOT NULL,
  `name` VARCHAR(50) NULL,
  `phone_no` INT(10) NOT NULL,
  `max_limit` INT NULL,
  `gift_per_user_limit` INT NULL,
  `evoucher_details_status` VARCHAR(1) NULL DEFAULT 'A' COMMENT 'A is Active (available evoucher)\nB is Buy (already buy evoucher)\nI is Inactive (not available evoucher)',
  PRIMARY KEY (`evoucher_details_id`),
  CONSTRAINT `evoucherdetails_evoucher_fk`
    FOREIGN KEY (`evoucher_id`)
    REFERENCES `evoucher` (`evoucher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `evoucherdetails_buytype_fk`
    FOREIGN KEY (`bt_id`)
    REFERENCES `buy_type` (`bt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `evoucherdetails_evoucher_fk_idx` ON `evoucher_details` (`evoucher_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `evoucherdetails_buytype_fk_idx` ON `evoucher_details` (`bt_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `payment_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `payment_method` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `payment_method` (
  `pm_id` INT NOT NULL,
  `pm_code` VARCHAR(15) NULL,
  `pm_desc` VARCHAR(45) NULL,
  `pm_status` VARCHAR(1) NULL DEFAULT 'A' COMMENT 'A is Active and I is Inactive',
  PRIMARY KEY (`pm_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `payment_method_discount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `payment_method_discount` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `payment_method_discount` (
  `pmd_id` INT NOT NULL,
  `pmd_percent` INT(2) NULL,
  `pmd_percent_desc` VARCHAR(45) NULL,
  `pmd_status` VARCHAR(1) NULL DEFAULT 'A' COMMENT 'A is Active and I is Inactive',
  PRIMARY KEY (`pmd_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `purchase_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `purchase_history` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `purchase_history` (
  `purchase_id` INT NOT NULL AUTO_INCREMENT,
  `evoucher_id` INT NULL,
  `evoucher_details_id` INT NOT NULL,
  `amount` DECIMAL(8,2) NULL,
  `discount_amt` DECIMAL(8,2) NULL,
  `payment_method_id` INT NULL,
  `payment_discount_id` INT NULL,
  `qrcode_image` VARCHAR(100) NULL,
  `promo_code` VARCHAR(11) NULL,
  `phone_no` INT(10) NOT NULL,
  `expire_date` DATE NULL,
  `tranx_date` DATE NULL,
  `tranx_status` VARCHAR(1) NULL COMMENT 'A is Active\n',
  PRIMARY KEY (`purchase_id`, `evoucher_details_id`, `phone_no`),
  CONSTRAINT `purchasehistory_evoucher_fk`
    FOREIGN KEY (`evoucher_id`)
    REFERENCES `evoucher` (`evoucher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `purchasehistory_payment_method_fk`
    FOREIGN KEY (`payment_method_id`)
    REFERENCES `payment_method` (`pm_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `purchasehistory_paymentmethoddiscount_fk`
    FOREIGN KEY (`payment_discount_id`)
    REFERENCES `payment_method_discount` (`pmd_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `purchasehistory_evoucherdetails`
    FOREIGN KEY (`evoucher_details_id`)
    REFERENCES `evoucher_details` (`evoucher_details_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `purchasehistory_evoucher_fk_idx` ON `purchase_history` (`evoucher_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `purchasehistory_payment_method_fk_idx` ON `purchase_history` (`payment_method_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `purchasehistory_paymentmethoddiscount_fk_idx` ON `purchase_history` (`payment_discount_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `purchasehistory_evoucherdetails_idx` ON `purchase_history` (`evoucher_details_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `system_configs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `system_configs` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `system_configs` (
  `config_id` INT NOT NULL COMMENT '0 is default ID',
  `max_evoucher_limit` INT NULL,
  `gift_per_user_limit` INT NULL,
  PRIMARY KEY (`config_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `buy_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `evoucherms`;
INSERT INTO `buy_type` (`bt_id`, `bt_desc`) VALUES (0, 'only me usage');
INSERT INTO `buy_type` (`bt_id`, `bt_desc`) VALUES (1, 'gift to others');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cards`
-- -----------------------------------------------------
START TRANSACTION;
USE `evoucherms`;
INSERT INTO `cards` (`cards_id`, `payment_method_id`, `status`) VALUES (5555555555555555, 1, 'A');
INSERT INTO `cards` (`cards_id`, `payment_method_id`, `status`) VALUES (6666666666666666, 2, 'A');

COMMIT;


-- -----------------------------------------------------
-- Data for table `payment_method`
-- -----------------------------------------------------
START TRANSACTION;
USE `evoucherms`;
INSERT INTO `payment_method` (`pm_id`, `pm_code`, `pm_desc`, `pm_status`) VALUES (1, 'visa', 'Visa Card', 'A');
INSERT INTO `payment_method` (`pm_id`, `pm_code`, `pm_desc`, `pm_status`) VALUES (2, 'master', 'Master Card', 'A');
INSERT INTO `payment_method` (`pm_id`, `pm_code`, `pm_desc`, `pm_status`) VALUES (3, 'mpu', 'MPU Card', 'A');

COMMIT;


-- -----------------------------------------------------
-- Data for table `payment_method_discount`
-- -----------------------------------------------------
START TRANSACTION;
USE `evoucherms`;
INSERT INTO `payment_method_discount` (`pmd_id`, `pmd_percent`, `pmd_percent_desc`, `pmd_status`) VALUES (1, 10, '10 Percent Discount', 'A');
INSERT INTO `payment_method_discount` (`pmd_id`, `pmd_percent`, `pmd_percent_desc`, `pmd_status`) VALUES (2, 5, '5 Percent Discount', 'A');

COMMIT;


-- -----------------------------------------------------
-- Data for table `system_configs`
-- -----------------------------------------------------
START TRANSACTION;
USE `evoucherms`;
INSERT INTO `system_configs` (`config_id`, `max_evoucher_limit`, `gift_per_user_limit`) VALUES (0, 100, 100);

COMMIT;

